@using PagedList.Core.Mvc
@{
    ViewData["Title"] = "Home Page";
}
@{
    var hasResult = Model.Products != null && Model.Products.Count > 0;
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Title
            </th>
            <th>
                Description
            </th>
            <th>
                Price
            </th>
            <th>
               Stock
            </th>
            <th>
                Brand
            </th>
            <th>
                Thumbnail
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @item.Title
                </td>
                <td>
                    @item.Description
                   
                <td>
                    @item.Price

                </td>
                <td>
                    @item.Stock

                </td>
                <td>
                    @item.Brand

                </td>
                <td>

                    <img src="@item.Thumbnail" style="height: 100px;"  />
                </td>
                <td>
                        @Html.ActionLink("Add", "AddToCart", new {  productId = item.ProductId, title = item.Title, price = item.Price, page = Context.Request.Query["page"].ToString()})
                </td>
            </tr>
        }
    </tbody>
</table>


@Html.ActionLink("Checkout", "Index", "ShoppingCart")


@if (hasResult)
{
@*    <p><h6>Minimal</h6><pager class="pager-container" list="@Model.Products" options="@PagedListRenderOptions.Bootstrap4Minimal" asp-action="Index" asp-controller="Home" /></p>
    <p><h6>Page Numbers with Previous and Next</h6><pager class="pager-container" list="@Model.Products" options="@PagedListRenderOptions.Bootstrap4PageNumbersPlusPrevAndNext" asp-action="Index" asp-controller="Home" /></p>
    <p><h6>Numbers Only</h6><pager class="pager-container" list="@Model.Products" options="@PagedListRenderOptions.Bootstrap4PageNumbersOnly" asp-action="Index" asp-controller="Home" /></p>*@
    <p><pager class="pager-container" list="@Model.Products" options="@PagedListRenderOptions.Bootstrap4Full" asp-action="Index" asp-controller="Home" /></p>
}


@using Microsoft.Extensions.Options
@inject IOptions<AppSettings> settings
@section Scripts{
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script type="text/javascript">

        var timerId;
        const connection = new signalR.HubConnectionBuilder()
                .withUrl('@settings.Value.SignalRHubUrl/orderhub')
                .configureLogging(signalR.LogLevel.Debug)
                .withAutomaticReconnect()
                .build();

        connection.on('UpdateOrders', (message, orderId) => {

            const encodedMsg = message + ":" + orderId;
            console.log(encodedMsg);
            if (orderId && orderId.length) {
                toastr.success(orderId + ' Updated to status' + message);
                refreshPage();
            }
        });

        function refreshPage() {
            clearTimeout(timerId);
            timerId = setTimeout(function () {
                window.location.reload();
            }, 1000)
        };

        connection.start().catch(err => console.error(err.toString()));
    </script>
}
